{"version":3,"sources":["services/client.js","components/Navigation.js","utils/utils.js","components/ClientUpdateModalForm.js","components/CardDataField.js","components/AddTimeButton.js","components/ClientCard.js","components/Widget.js","pages/Dashboard.js","components/ClientTableItem.js","components/ClientList.js","components/Pagination.js","components/SearchFilter.js","pages/Clients.js","components/FormTextField.js","services/login.js","components/LoginForm.js","pages/Login.js","pages/Account.js","validations/ClientValidation.js","components/AddClientForm.js","components/ModalDialog.js","pages/AddClient.js","components/Footer.js","images/carousel-image-1.webp","images/carousel-image-2.webp","pages/PublicHomePage.js","components/Loading.js","validations/BusinessValidation.js","services/business.js","components/SignUpForm.js","pages/SignUp.js","App.js","index.js"],"names":["baseUrl","setHeader","token","headers","Authorization","clientService","get","a","config","axios","response","console","log","message","create","client","post","update","updatedClient","put","id","addTime","time","erase","delete","Navigation","user","Navbar","bg","expand","variant","animation","Brand","Toggle","aria-controls","Collapse","Nav","className","to","Link","dateIsPast","date","current","Date","setHours","utils","capitalizeFirstLetter","string","charAt","toUpperCase","slice","calculateAge","bd","diff","Math","floor","getStats","list","currentDate","unsubClients","filter","c","subEndDate","length","subClients","closeToExpire","result","getTime","ClientUpdateModalForm","open","handleOpen","title","label","value","currentClientHandler","listHandler","useState","newValue","setNewValue","error","setError","property","toLowerCase","handleError","setTimeout","handleClose","validate","field","test","String","lowerCaseValue","handleSubmit","e","preventDefault","newField","map","data","Modal","size","aria-labelledby","centered","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","Row","Col","Control","name","type","onChange","target","Footer","Button","onClick","CardDataField","setOpen","Container","noGutters","readOnly","AddTimeButton","table","props","subQty","subType","values","setValues","handleChange","Group","Check","ClientCard","dashboard","openName","setOpenName","setLabel","setValue","deleteClient","window","confirm","alert","birthDate","age","Card","border","Subtitle","xs","lg","address","mail","gender","toLocaleDateString","city","phone","Widget","children","text","scrollable","Dashboard","clientList","setClientList","stats","setStats","selectedClient","setSelectedClient","useEffect","Text","style","cursor","background","ClientTableItem","Fragment","ClientList","clients","Table","striped","bordered","hover","responsive","colSpan","Pagination","itemPerPage","totalItems","currentPage","paginate","totalPages","setTotalPages","ceil","paginationItems","useMemo","pageNumbers","i","push","href","SearchFilter","toSearch","setToSearch","placeholder","Client","userHandler","setFilter","setCurrentPage","totalClients","setTotalClients","undefined","currentClient","setCurrentClient","currentClients","processedClients","includes","pageNum","FormTextField","useField","meta","Label","touched","login","credentials","initialValues","username","password","remember","LoginForm","loginHandler","redirectHandler","actions","loginService","localStorage","setItem","JSON","stringify","setSubmitting","resetForm","isSubmitting","errors","disabled","Login","redirect","setRedirect","fluid","sm","md","Account","removeItem","clientSchema","yup","shape","required","email","max","min","AddClientForm","modalHandler","clientListHandler","newClient","concat","validationSchema","isValid","width","ModalDialog","AddClient","openModal","setOpenModal","PublicHomePage","Carousel","Item","src","carouselImage1","alt","Caption","carouselImage2","Loading","Spinner","role","businessSchema","passwordConfirm","oneOf","businessService","newUser","SignUpForm","newBusiness","SignUp","App","setUser","isLoading","setIsLoading","loggedUserJSON","getItem","parse","status","getClients","path","Clients","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aca85f40.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/clients';\r\n\r\nconst setHeader = token => {\r\n  const header = {\r\n    headers: {\r\n      Authorization : `bearer ${token}` }\r\n    };\r\n  return header;\r\n}\r\n\r\nconst get = async token => {\r\n  const config = setHeader(token);\r\n  try {\r\n    const response = await axios.get(baseUrl, config);\r\n    return response;\r\n  }\r\n  catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nconst create = async (client, token) => {\r\n  const config = setHeader(token);\r\n  try {\r\n    const response = await axios.post(baseUrl, client, config);\r\n    return response;\r\n  }\r\n  catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nconst update = async (updatedClient, token) => {\r\n  const config = setHeader(token);\r\n  try {\r\n    const response = await axios.put(`${baseUrl}/${updatedClient.id}`, updatedClient, config);\r\n    return response;\r\n  }\r\n  catch (error) {\r\n    console.log(error.message);\r\n    return error.message;\r\n  }\r\n}\r\n\r\nconst addTime = async (client, time, token) => {\r\n  const config = setHeader(token);\r\n  try {\r\n    const response = await axios.put(`${baseUrl}/addtime/${client.id}`, time, config);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nconst erase = async (client, token) => {\r\n  const config = setHeader(token);\r\n  try {\r\n    const response = await axios.delete(`${baseUrl}/${client.id}`, config)\r\n    return response\r\n  }\r\n  catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nconst clientService = { \r\n  get, \r\n  create,\r\n  update,\r\n  addTime,\r\n  erase\r\n}\r\n\r\nexport default clientService;","import React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\n\r\nexport const Navigation = ({ user }) => {\r\n  return (\r\n    <div>\r\n      <Navbar bg='dark' expand='sm' variant='dark' animation='false'>\r\n        <Navbar.Brand>GymApp</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse animation='false' id='basic-navbar-nav'>\r\n          <Nav className='ml-auto'>\r\n            <LinkContainer to='/'><Nav.Link>Home</Nav.Link></LinkContainer>\r\n            {\r\n              user\r\n                ? <LinkContainer to='/clients'><Nav.Link>Clients</Nav.Link></LinkContainer>\r\n                : null\r\n            }\r\n            { \r\n              user\r\n                ? <LinkContainer to='/account'><Nav.Link>Account</Nav.Link></LinkContainer>\r\n                : <LinkContainer to='/login'><Nav.Link>Login</Nav.Link></LinkContainer>\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation;","const capitalizeFirstLetter = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nconst calculateAge = bd => {\r\n  const current = new Date();\r\n  const diff = current-bd;\r\n  const age = Math.floor(diff/31557600000);\r\n  return age;\r\n};\r\n\r\nconst dateIsPast = date => {\r\n  const current = new Date();\r\n  if (date.setHours(0,0,0,0) <= current.setHours(0,0,0,0)){\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst getStats = list => {\r\n  const currentDate = new Date();\r\n  const unsubClients = list.filter( c => dateIsPast(new Date(c.subEndDate)) ).length;\r\n  const subClients = list.filter( c => !dateIsPast(new Date(c.subEndDate)) ).length;\r\n  const closeToExpire = list.filter( c => {\r\n    const result = (Math.floor(new Date(c.subEndDate).getTime() - currentDate.getTime()) / 2629800000 );\r\n    return (result < 1 && result > 0);\r\n  });\r\n\r\n  const result = {\r\n    unsubClients,\r\n    subClients,\r\n    closeToExpire\r\n  }\r\n  return result;\r\n}\r\n\r\nconst utils = {\r\n  capitalizeFirstLetter,\r\n  calculateAge,\r\n  dateIsPast,\r\n  getStats\r\n}\r\n\r\nexport default utils;","import React, { useState } from 'react';\r\nimport { Modal, Button, Row, Form, Col } from 'react-bootstrap';\r\nimport clientService from '../services/client';\r\n\r\nconst ClientUpdateModalForm = ({ open, handleOpen, title, label, value, client, token, currentClientHandler, listHandler, list }) => {\r\n  const [ newValue, setNewValue ] = useState(value);\r\n  const [ error, setError ] = useState('');\r\n  let property = label === 'Birthday' ? 'birthDate' : label.toLowerCase();\r\n  const handleError = message => {\r\n    setError(message);\r\n    setTimeout(() => setError(''), 5000);\r\n  }\r\n  const handleClose = () => handleOpen(false);\r\n  const handleChange = e => setNewValue(e.target.value);\r\n  const validate = (field, value) => {\r\n    switch (field) {\r\n      case 'mail':\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(value).toLowerCase())) {\r\n          handleError('Invalid mail.');\r\n          return false;\r\n        } else {\r\n          return true;\r\n        };\r\n      case 'gender':\r\n        const lowerCaseValue = value.toLowerCase();\r\n        if (lowerCaseValue === 'male' || lowerCaseValue === 'female' || lowerCaseValue === 'other'){\r\n          return true;\r\n        } else {\r\n          handleError('You must enter male, female or other');\r\n          return false;\r\n        };\r\n      default:\r\n        return true;\r\n    };\r\n  }\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const newField = { [property]: newValue }\r\n    if(validate(property, newValue)){\r\n      const updatedClient = {\r\n        ...client,\r\n        ...newField\r\n      }\r\n      try {\r\n        const response = await clientService.update(updatedClient, token);\r\n        listHandler( list.map( c => c.id === response.data.id ? response.data : c ) );\r\n        currentClientHandler(response.data);\r\n        handleClose();\r\n      }\r\n      catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n      size='sm'\r\n      aria-labelledby='contained-modal-title-vcenter'\r\n      centered\r\n      animation={false}\r\n      show={open} \r\n      onHide={handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Row>\r\n              <Col>\r\n                <Form.Control\r\n                  label={label}\r\n                  name={property}\r\n                  type={property === 'birthDate' ? 'date' : 'text' }\r\n                  onChange={handleChange}\r\n                  value={newValue}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {\r\n              error.length > 0\r\n                ? (<Row><Col><p className='text-center text-danger mt-2'>{error}</p></Col></Row>)\r\n                : null\r\n            }\r\n            <Modal.Footer>\r\n              <Button variant='dark' type='submit'>Save changes</Button>\r\n              <Button variant='secondary' onClick={handleClose}>Close</Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal.Body>\r\n    \r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default ClientUpdateModalForm;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport ModalUpdateForm from './ClientUpdateModalForm';\r\n\r\nconst CardDataField = ({ label, value, client, token, currentClientHandler, list, listHandler }) => {\r\n  const [ open, setOpen ] = useState(false);\r\n  return (\r\n    <Container>\r\n      <Row noGutters className='text-center'>\r\n        <Col className='text-center m-1'>{label}</Col>\r\n        <Col>\r\n          <input\r\n            className='text-center m-1'\r\n            readOnly\r\n            value={value}\r\n            onClick={() => {\r\n              if (label === 'Subscription ends at' || label === 'Age') {\r\n                return null;\r\n              }\r\n              setOpen(true);\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <ModalUpdateForm\r\n        client={client}\r\n        title={`Modify ${label}`}\r\n        open={open}\r\n        handleOpen={setOpen}\r\n        label={label}\r\n        value={value}\r\n        token={token}\r\n        currentClientHandler={currentClientHandler}\r\n        list={list}\r\n        listHandler={listHandler}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CardDataField\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport clientService from '../services/client';\r\n\r\nconst AddTimeButton = ({ table, client, currentClientHandler, list, listHandler, token, ...props }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [ error, setError ] = useState(null)\r\n  const [ values, setValues ] = useState({\r\n    subQty: '',\r\n    subType:''\r\n  });\r\n  const handleOpen = () => setOpen(!open);\r\n  const handleChange = e => setValues({\r\n    ...values,\r\n    [e.target.name]: e.target.value\r\n  });\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n      try {\r\n        const response = await clientService.addTime(client, values, token);\r\n        listHandler( list.map( c => c.id === response.data.id ? response.data : c ) );\r\n        currentClientHandler(response.data);\r\n        handleOpen();\r\n        setValues('')\r\n      }\r\n      catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n  };\r\n  const validate = () => {\r\n    if ( values.subQty <= 0 || values.subQty.length === 0) {\r\n      handleError('* Number must be more than 0');\r\n      return false;\r\n    };\r\n    if ( values.subType === '' ) {\r\n      handleError('* Must select a type');\r\n      return false;\r\n    };\r\n    return true;\r\n  };\r\n  const handleError = message => {\r\n    setError(message);\r\n    setTimeout(() => {\r\n      setError(null);\r\n    }, 5000)\r\n  }\r\n  return (\r\n    <> \r\n      <Button\r\n        variant='dark'\r\n        className={ table ? '' : 'm-1' }\r\n        onClick={handleOpen}\r\n        {...props}\r\n      >\r\n        { table ? 'Add' : 'Add Time' }\r\n      </Button>\r\n      <Modal\r\n        size='sm'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n        animation={false}\r\n        show={open} \r\n        onHide={handleOpen}\r\n      >\r\n        <Modal.Header closeButton >\r\n          <Modal.Title>Add time</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={handleSubmit} >\r\n          <Modal.Body>\r\n            <Form.Group>\r\n              <Form.Control\r\n                className='mb-1'\r\n                type='number'\r\n                onChange={handleChange}\r\n                name='subQty'\r\n                value={values.subQty}\r\n              />\r\n              <Form.Check\r\n                type='radio'\r\n                label='Months'\r\n                id='sub-months'\r\n                name='subType'\r\n                value='months'\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Check\r\n                type='radio'\r\n                label='Days'\r\n                id='sub-days'\r\n                name='subType'\r\n                value='days'\r\n                onChange={handleChange}\r\n              />\r\n              {\r\n                error\r\n                  ? <p className='text-danger'>{error}</p>\r\n                  : null\r\n              }\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant='dark' type='submit'>Add</Button>\r\n            <Button\r\n              variant='secondary'\r\n              onClick={handleOpen}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTimeButton;\r\n","import React, { useState } from 'react';\r\nimport { Container,\r\n  Row,\r\n  Col,\r\n  Card, \r\n  Button} from 'react-bootstrap';\r\nimport clientService from '../services/client';\r\nimport utils from '../utils/utils';\r\nimport CardDataField from './CardDataField';\r\nimport ModalUpdateForm from './ClientUpdateModalForm';\r\nimport AddTimeButton from './AddTimeButton';\r\n\r\nconst ClientCard = ({ client, token, listHandler, list, currentClientHandler, dashboard }) => {\r\n  const [ openName, setOpenName ] = useState(false);\r\n  const [ label, setLabel ] = useState('');\r\n  const [ value, setValue ] = useState('');\r\n  const deleteClient = async () => {\r\n      if(window.confirm(`Do you really want to delete ${client.name}?`)){\r\n        try {\r\n          await clientService.erase(client, token);\r\n          listHandler(list.filter( c => c.id !== client.id));\r\n          currentClientHandler(null);\r\n          window.alert(`${client.name} deleted successfully.`);\r\n        }\r\n        catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n  };\r\n  client.birthDate = new Date(client.birthDate);\r\n  client.age = utils.calculateAge(client.birthDate);\r\n  client.subEndDate = new Date(client.subEndDate);\r\n  return(\r\n    <Card border ='secondary' className='m-3 p-3' >\r\n      <Card.Title className='text-center'>{client.name}</Card.Title>\r\n      <Card.Subtitle className='text-center'>\r\n        { \r\n          utils.dateIsPast(client.subEndDate)\r\n            ? <p className='text-danger'>Unsubscribed</p>\r\n            : <p className='text-success'>Subscribed</p>\r\n        }\r\n      </Card.Subtitle>\r\n      <p className='text-center small'>(Click on a field to modify its value)</p>\r\n      <Card.Body>\r\n        <Container >\r\n          <Row>\r\n            <Col xs={12} lg={6}>\r\n              <CardDataField \r\n                token={token}\r\n                client={client}\r\n                label='Age'\r\n                value={client.birthDate ? client.age : '-' }\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n              <CardDataField \r\n                token={token}\r\n                client={client}\r\n                label ='Address'\r\n                value={client.address ? client.address : '-' }\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n              <CardDataField \r\n                token={token}\r\n                client={client}\r\n                label='Mail' value={client.mail ? client.mail : '-' }\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n              <CardDataField \r\n                token={token}\r\n                client={client}\r\n                label='Gender' value={utils.capitalizeFirstLetter(client.gender)}\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <CardDataField \r\n                token={token}\r\n                client={client}\r\n                label='Birthday' value={client.birthDate ? client.birthDate.toLocaleDateString() : '-'}\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n              <CardDataField \r\n                token={token}\r\n                client={client}\r\n                label='City' value={client.city ? client.city : '-' }\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n              <CardDataField \r\n                token={token}\r\n                client={client}\r\n                label='Phone' value={client.phone ? client.phone : '-' }\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n              <CardDataField\r\n                token={token}\r\n                client={client}\r\n                label='Subscription ends at'\r\n                value={client.subEndDate ? client.subEndDate.toLocaleDateString() : '-'}\r\n                className={utils.dateIsPast(client.subEndDate) ? 'table-danger' : null }\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row className='text-center m-3'>\r\n            <Col>\r\n              <AddTimeButton\r\n                token={token}\r\n                client={client}\r\n                currentClientHandler={currentClientHandler}\r\n                listHandler={listHandler}\r\n                list={list}\r\n              />\r\n              <Button\r\n              variant='dark'\r\n                onClick={() => {\r\n                  setLabel('Name');\r\n                  setValue(client.name);\r\n                  setOpenName(true);\r\n                }}\r\n              >\r\n                Change name\r\n              </Button>\r\n              <Button\r\n                className='m-1'\r\n                onClick={() => deleteClient() }\r\n                variant='danger'\r\n              >\r\n                Remove\r\n              </Button>\r\n              {\r\n                !dashboard\r\n                  ? <Button\r\n                  variant='secondary'\r\n                  onClick={() => currentClientHandler(null)}\r\n                  >\r\n                  Close\r\n                  </Button>\r\n                  : null\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card.Body>\r\n      <ModalUpdateForm\r\n        client={client}\r\n        title={`Modify ${label}`}\r\n        open={openName}\r\n        handleOpen={setOpenName}\r\n        label={label}\r\n        value={value}\r\n        token={token}\r\n        currentClientHandler={currentClientHandler}\r\n        listHandler={listHandler}\r\n        list={list}\r\n      />\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default ClientCard;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport '../styles/card.css';\r\n\r\nconst Widget = ({title, children}) => {\r\n  return (\r\n    <Card bg='dark' text='light' className='.card'>\r\n      <Card.Header>{title}</Card.Header>\r\n      <Card.Body scrollable='true' >\r\n        {children}\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Widget;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Modal, Col, Container, Row } from 'react-bootstrap';\r\nimport ClientCard from '../components/ClientCard';\r\nimport Widget from '../components/Widget';\r\nimport utils from '../utils/utils';\r\nimport '../styles/modalClientCard.css'\r\n\r\nconst Dashboard = ({ clientList, setClientList, user }) => {\r\n  const [ stats, setStats ] = useState({});\r\n  const [ open, setOpen ] = useState(false);\r\n  const [ selectedClient, setSelectedClient ] = useState(null);\r\n  const handleOpen = () => setOpen(!open);\r\n  useEffect(() => {\r\n    setStats(utils.getStats(clientList));\r\n  }, [clientList])\r\n  return (\r\n    <div className='text-center mt-2'>\r\n      <h2>Dashboard</h2>\r\n      <Container className='mt-4'>\r\n        <Row>\r\n          <Col>\r\n            <Widget\r\n              title='Total Clients'\r\n            >\r\n              <Card.Text className='h1'>\r\n                {clientList.length}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                <span className='text-success'>Subscribed</span> : {stats.subClients}\r\n              </Card.Text>\r\n              <Card.Text>\r\n                <span className='text-danger'>Unsubscribeds</span> : {stats.unsubClients}\r\n              </Card.Text>\r\n            </Widget>\r\n          </Col>\r\n          <Col>\r\n            <Widget title='Close to Expire'>\r\n              { clientList.length > 0 && stats.closeToExpire\r\n                ? stats.closeToExpire.map( c => {\r\n                  c.subEndDate = new Date(c.subEndDate);\r\n                  return <Card.Text \r\n                    key={c.id}\r\n                    onClick={() => {\r\n                    handleOpen()\r\n                    setSelectedClient(c)\r\n                    }}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    {c.name} - {c.subEndDate.toLocaleDateString()}\r\n                  </Card.Text>\r\n                })\r\n                : null\r\n              }\r\n            </Widget>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Modal \r\n        show={open}\r\n        onHide={handleOpen}\r\n        animation={false}\r\n        >\r\n        <Modal.Body style={{ background: '#343a40'}} >\r\n          <ClientCard\r\n            dashboard\r\n            client={selectedClient}\r\n            token={ user ? user.token : null}\r\n            listHandler={setClientList}\r\n            list={clientList}\r\n            currentClientHandler={setSelectedClient}\r\n          />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport clientService from '../services/client';\r\nimport utils from '../utils/utils';\r\nimport AddTimeButton from './AddTimeButton';\r\n\r\nconst ClientTableItem = ({ client, token, listHandler, list, currentClientHandler }) => {\r\n  const deleteClient = async () => {\r\n      if(window.confirm(`Do you really want to delete ${client.name}?`)){\r\n        try {\r\n          await clientService.erase(client, token);\r\n          listHandler(list.filter( c => c.id !== client.id));\r\n          currentClientHandler(null);\r\n          window.alert(`${client.name} deleted successfully.`);\r\n        }\r\n        catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n  };\r\n  client.birthDate = new Date(client.birthDate);\r\n  client.age = utils.calculateAge(client.birthDate);\r\n  client.subEndDate = new Date(client.subEndDate);\r\n  return(\r\n    <React.Fragment>\r\n      <tr className='text-center' style={{ cursor: 'pointer' }} onClick={() => currentClientHandler(client) }>\r\n        <td>{client.name}</td>\r\n        <td>{client.birthDate ? client.age : '-' }</td>\r\n        <td>{client.birthDate ? client.birthDate.toLocaleDateString() : '-'}</td>\r\n        <td>{client.phone ? client.phone : '-'}</td>\r\n        <td className={ utils.dateIsPast(client.subEndDate) ? 'table-danger' : null }>\r\n          {client.subEndDate ? client.subEndDate.toLocaleDateString() : '-'}\r\n        </td>\r\n        <td>\r\n          <AddTimeButton\r\n            table\r\n            size='sm'\r\n            token={token}\r\n            client={client}\r\n            currentClientHandler={currentClientHandler}\r\n            listHandler={listHandler}\r\n            list={list}\r\n          >\r\n            Add\r\n          </AddTimeButton>\r\n        </td>\r\n        <td> \r\n          <Button\r\n            size='sm'\r\n            variant='danger'\r\n            onClick={() => deleteClient()}\r\n          >\r\n            Remove\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default ClientTableItem;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport ClientTableItem from './ClientTableItem';\r\n\r\nconst ClientList = ({ clients, token, listHandler, list, currentClientHandler }) => {\r\n  return (\r\n    <div className='mt-4'>\r\n      <Table size='sm' striped bordered hover responsive>\r\n        <thead>\r\n          <tr className='text-center'>\r\n            <th>Fullname</th>\r\n            <th>Age</th>\r\n            <th>Birthdate</th>\r\n            <th>Phone</th>\r\n            <th>Sub's end date</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            clients.length > 0\r\n              ? clients.map( client => <ClientTableItem \r\n                  client={client}\r\n                  key={client.id}\r\n                  token={token}\r\n                  listHandler={listHandler}\r\n                  list={list}\r\n                  currentClientHandler={currentClientHandler}\r\n                />)\r\n              : <tr><td colSpan='7' className='m-3 alert alert-primary text-center'>No Clients found!</td></tr>\r\n          }\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientList;","import React, { useEffect, useMemo, useState } from 'react';\r\nimport '../styles/pagination.css';\r\n\r\nconst Pagination = ({ itemPerPage = 10, totalItems = 0, currentPage, paginate }) => {\r\n  const [ totalPages, setTotalPages ] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    if(totalItems > 0 && itemPerPage > 0){\r\n      setTotalPages(Math.ceil(totalItems / itemPerPage));\r\n    }\r\n  },[ totalItems, itemPerPage ]);\r\n\r\n  const paginationItems = useMemo( () => {\r\n    const pageNumbers = [];\r\n    for( let i = 1; i <= totalPages; i++ ){\r\n      pageNumbers.push(\r\n        <li className='page-item text-dark' key={i}>\r\n          <a className='page-link' href='#/' onClick={() => paginate(i)}>{i}</a>\r\n        </li>);\r\n    }\r\n    return pageNumbers;\r\n  }, [ totalPages, paginate]);\r\n\r\n  if(totalPages === 0) return null;\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination justify-content-center'>\r\n        <li className='page-item' onClick={() => currentPage !== 1 ? paginate(currentPage-1) : null}>\r\n          <a className='page-link' href='#/'>Previous</a>\r\n        </li>\r\n          { paginationItems }\r\n        <li className='page-item' onClick={() => currentPage !== totalPages ? paginate(currentPage+1) : null}>\r\n          <a className='page-link' href='#/'>Next</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useState } from 'react';\r\nimport { Form, Col } from 'react-bootstrap';\r\n\r\nconst SearchFilter = ({ filter, currentPage }) => {\r\n  const [ toSearch, setToSearch ] = useState('');\r\n  const handleChange = e =>{\r\n    setToSearch(e.target.value);\r\n    filter(e.target.value);\r\n    currentPage(1);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Form>\r\n        <Form.Row className='m-0'>\r\n          <Col>\r\n            <Form.Control onChange={handleChange} value={toSearch || ''} type='text' placeholder='Enter client to search...' />\r\n          </Col>\r\n        </Form.Row>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchFilter;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport ClientList from '../components/ClientList';\r\nimport Pagination from '../components/Pagination';\r\nimport SearchFilter from '../components/SearchFilter';\r\nimport ClientCard from '../components/ClientCard';\r\n\r\nconst Client = ({ user, userHandler, clientList, setClientList }) => {\r\n  const [ filter, setFilter ] = useState('');\r\n  const [ currentPage, setCurrentPage] = useState(1);\r\n  const [ totalClients, setTotalClients ] = useState(0);\r\n  const [ currentClient, setCurrentClient ] = useState(undefined);\r\n  const CLIENTS_PER_PAGE = 4;\r\n\r\n  const paginate = pageNum => setCurrentPage(pageNum);  // CHANGES CURRENT PAGE ON PAGINATION\r\n\r\n  // GET CLIENTS LENGHT FROM ARRAY\r\n  useEffect(()=> {\r\n    setTotalClients(clientList.length);\r\n  }, [clientList]);\r\n\r\n  // FILTER & PAGINATION CLIENT'S ARRAY TREATMENT\r\n  const currentClients = useMemo( () => {\r\n    let processedClients = clientList;\r\n    if(filter){\r\n      processedClients = clientList.filter( c => c.name.toLowerCase().includes(filter.toLowerCase() ));\r\n    };\r\n    setTotalClients(processedClients.length);\r\n    return processedClients.slice(\r\n      (currentPage - 1) * CLIENTS_PER_PAGE,\r\n      (currentPage - 1) * CLIENTS_PER_PAGE + CLIENTS_PER_PAGE\r\n    );\r\n  }, [ clientList, currentPage, filter ]);\r\n  \r\n  return (\r\n    <div>\r\n      <Container className='align-items-center'>\r\n        <h3 className='text-center m-4'>Clients</h3>\r\n        <SearchFilter  filter={setFilter} currentPage={setCurrentPage}/>\r\n        <ClientList \r\n          clients= {currentClients}\r\n          token={ user ? user.token : null}\r\n          listHandler={setClientList}\r\n          list={clientList}\r\n          currentClientHandler={setCurrentClient}\r\n        />\r\n        <Pagination\r\n          itemPerPage={CLIENTS_PER_PAGE}\r\n          totalItems={totalClients}\r\n          currentPage={currentPage}\r\n          paginate={paginate}\r\n        /> \r\n        <Link to='/addclient'>\r\n          <Button className='text-center' variant='dark'>Add client</Button>\r\n        </Link>\r\n        {\r\n          currentClient\r\n            ? <ClientCard\r\n                client={currentClient}\r\n                token={ user ? user.token : null}\r\n                listHandler={setClientList}\r\n                list={clientList}\r\n                currentClientHandler={setCurrentClient}\r\n              />\r\n            : null\r\n        }\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Client;","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst FormTextField = ({ label, ...props }) => {\r\n  const [ field, meta ] = useField(props);\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>{label}</Form.Label>\r\n      <Form.Control \r\n        {...field}\r\n        {...props}\r\n      />\r\n      { meta.touched && meta.error && <div className='mt-2 text-danger'>{meta.error}</div> }\r\n    </Form.Group>\r\n  )\r\n}\r\n\r\nexport default FormTextField;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n}\r\n\r\nexport default login;","import { Field, Formik } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport TextField from '../components/FormTextField';\r\nimport loginService from '../services/login';\r\n\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  remember: false\r\n};\r\n\r\nconst LoginForm = ({ loginHandler, redirectHandler }) => (\r\n  <Formik\r\n    initialValues={initialValues}\r\n    onSubmit={ async ( values, actions ) => {\r\n      try {\r\n        const user = await loginService(values);\r\n        loginHandler(user);\r\n        window.localStorage.setItem('loggedGymAppUser', JSON.stringify(user));\r\n        actions.setSubmitting(false);\r\n        actions.resetForm()\r\n        redirectHandler(true);\r\n      }\r\n      catch (error) {\r\n        \r\n      }\r\n    }}\r\n  >\r\n    {({ handleChange, handleSubmit, isSubmitting, values, errors }) => (\r\n      <Form className='text-center' onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col>\r\n            <TextField\r\n             label='Username'\r\n             name='username'\r\n             onChange={handleChange}\r\n             value={values.username}\r\n             error={errors.username}\r\n            />\r\n            <TextField\r\n             label='Password'\r\n             name='password'\r\n             type='password'\r\n             onChange={handleChange}\r\n             value={values.mail}\r\n             error={errors.mail}\r\n            />\r\n            <Form.Group>\r\n              <Form.Label>Remember me?</Form.Label>\r\n              <Field type='checkbox' name='remember' className='ml-2'  />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Button \r\n                type='submit'\r\n                disabled={isSubmitting}\r\n                variant='light'\r\n              >\r\n                Login\r\n              </Button>   \r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col  >\r\n            <Form.Label>Not registered yet?</Form.Label>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <Form.Group>\r\n            <Link to='/signup'>\r\n              <Button variant='success' >Sign Up</Button>\r\n            </Link>\r\n          </Form.Group>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n);\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport LoginForm from '../components/LoginForm';\r\nimport { Container, Col, Row, Card } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst Login = ({ loginHandler }) => {\r\n  const [ redirect, setRedirect ] = useState(false);\r\n  if (redirect) {\r\n    return <Redirect to='/home' /> \r\n  };\r\n  return(\r\n    <Container fluid className='mt-4'>\r\n      <Row className='align-items-center'>\r\n        <Col xs={10} sm={6} md ={5} lg={4} className='mx-auto'>\r\n          <Card border='dark' bg='dark' text='light'>\r\n            <Card.Body>\r\n              <Card.Title className='text-center'>Login</Card.Title>\r\n              <LoginForm loginHandler={loginHandler} redirectHandler={setRedirect} />\r\n            </Card.Body>\r\n          </Card>       \r\n        </Col>\r\n      </Row>    \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Account = (props) => {\r\n\r\n  const [ redirect, setRedirect ] = useState(false);\r\n  if (redirect) {\r\n    return <Redirect to='/home' /> \r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedGymAppUser');\r\n    props.loginHandler(null);\r\n    setRedirect(true);\r\n  }; \r\n\r\n  return (\r\n    <Container className='text-center'>\r\n      <h3>Under construction</h3>\r\n      <Button variant='dark' onClick={() => handleLogout()}>Logout</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Account;","import * as yup from 'yup';\r\n\r\nconst clientSchema = yup.object().shape({\r\n  name: yup.string().required('Is required'),\r\n  mail: yup.string().email('Enter a valid e-mail'),\r\n  address: yup.string(),\r\n  city: yup.string(),\r\n  birthDate: yup.date().max(new Date(),'Invalid date').min(new Date('1900-01-01'),'Must be after 1900'),\r\n  phone: yup.string(),\r\n  gender: yup.string().required('Is required'),\r\n  subQty: yup.number().min(0, 'Must be major or equal to 0.'),\r\n  subType: yup.string().required('Is required')\r\n})\r\n\r\nexport default clientSchema;","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\nimport TextField from './FormTextField';\r\nimport clientSchema from '../validations/ClientValidation';\r\nimport clientService from '../services/client';\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  mail: '',\r\n  address: '',\r\n  city:'',\r\n  birthDate: '',\r\n  phone: '',\r\n  gender: '',\r\n  subQty:'',\r\n  subType:''\r\n};\r\n\r\nconst AddClientForm = ({ user, modalHandler, clientList, clientListHandler }) => (\r\n  <Formik\r\n    initialValues={initialValues}\r\n    onSubmit={ async (values, actions) =>{\r\n      const newClient = { ...values };\r\n      try {\r\n        const response = await clientService.create(newClient, user.token);\r\n        clientListHandler(clientList.concat(response.data));\r\n        modalHandler(true);\r\n        actions.resetForm();\r\n        actions.setSubmitting(false);\r\n      }\r\n      catch(error) {\r\n        console.log(error);\r\n        actions.setSubmitting(false);\r\n      };\r\n    }}\r\n    validationSchema={clientSchema}\r\n  >\r\n    {({ handleChange, handleSubmit, isValid, isSubmitting, resetForm, values, errors }) => (\r\n      <Form className='m-4' onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col sm={6}>\r\n            <TextField\r\n             label='Fullname'\r\n             name='name'\r\n             onChange={handleChange}\r\n             value={values.name}\r\n             error={errors.name}\r\n            />\r\n            <TextField\r\n             label='Mail'\r\n             name='mail'\r\n             onChange={handleChange}\r\n             value={values.mail}\r\n             error={errors.mail}\r\n            />\r\n            <TextField\r\n             label='Address'\r\n             name='address'\r\n             onChange={handleChange}\r\n             value={values.address}\r\n             error={errors.address}\r\n            />\r\n            <Form.Group>\r\n              <Form.Label>Birthdate</Form.Label>\r\n              <Form.Control\r\n                name='birthDate'\r\n                type='date'\r\n                value={values.birthDate}\r\n                onChange={handleChange}\r\n                error={errors.birthDate}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <TextField\r\n             label='City'\r\n             name='city'\r\n             onChange={handleChange}\r\n             value={values.city}\r\n             error={errors.city}\r\n            />\r\n            <TextField\r\n             label='Phone'\r\n             name='phone'\r\n             onChange={handleChange}\r\n             value={values.phone}\r\n             error={errors.phone}\r\n            />\r\n            <Form.Group>\r\n              <Form.Label>Gender</Form.Label>\r\n              { values.gender.touched && values.gender.error && <div className='mt-2 text-danger'>{values.gender.error}</div> }\r\n              <Form.Check \r\n                type='radio'\r\n                id='gender-male'\r\n                label='Male'\r\n                name='gender'\r\n                value='male'\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Check\r\n                type='radio'\r\n                label='Female'\r\n                id='gender-female'\r\n                name='gender'\r\n                value='female'\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Check\r\n                type='radio'\r\n                label='Other'\r\n                id='gender-other'\r\n                name='gender'\r\n                value='other'\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <TextField\r\n                label='Subscription time'\r\n                className={{ width: '40%' }}\r\n                type='number'\r\n                name='subQty'\r\n                onChange={handleChange}\r\n                value={values.subQty}\r\n                error={errors.subQty}\r\n              />\r\n              <Form.Check\r\n                type='radio'\r\n                label='Months'\r\n                id='sub-months'\r\n                name='subType'\r\n                value='months'\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Check\r\n                type='radio'\r\n                label='Days'\r\n                id='sub-days'\r\n                name='subType'\r\n                value='days'\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className='mt-3 justify-content-center'>\r\n          <Form.Group>\r\n            <Button\r\n              variant='dark'\r\n              className ='mr-4'\r\n              type='submit'\r\n              disabled={ !isValid || isSubmitting}\r\n            >\r\n              Create client\r\n            </Button>\r\n            <Button variant='secondary' onClick={resetForm} >Clear</Button>\r\n          </Form.Group>\r\n        </Row>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n)\r\n\r\nexport default AddClientForm\r\n","import React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\n\r\nconst ModalDialog = ({ open, handleOpen, title, message, children }) => {\r\n\r\n  const handleClose = () => handleOpen(false);\r\n  return (\r\n    <>\r\n      <Modal\r\n      size='m'\r\n      aria-labelledby='contained-modal-title-vcenter'\r\n      centered\r\n      animation={false}\r\n      show={open} \r\n      onHide={handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{message}</p>\r\n          {children}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='dark' onClick={handleClose}>Ok</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default ModalDialog;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Container } from \"react-bootstrap\";\r\nimport AddClientForm from \"../components/AddClientForm\";\r\nimport ModalDialog from \"../components/ModalDialog\";\r\n\r\nexport const AddClient = ({ user, clientList, clientListHandler }) => {\r\n  const [ openModal, setOpenModal ] = useState(false);\r\n  return (\r\n    <Container>\r\n      <h3 className='text-center mt-3'>Add new client</h3>\r\n      <AddClientForm\r\n        user={user}\r\n        modalHandler={setOpenModal}\r\n        clientList={clientList}\r\n        clientListHandler={clientListHandler}\r\n      />\r\n      <ModalDialog \r\n        title='Success!'\r\n        message='Client added successfully.'\r\n        open={openModal}\r\n        handleOpen={setOpenModal}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddClient;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='page-footer font-small pt-1'>\r\n      <p className='footer-copyright text-center py-3'>© 2021 Copyright: Franco Gabriel Sanchez</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/carousel-image-1.295f0ba5.webp\";","export default __webpack_public_path__ + \"static/media/carousel-image-2.51ae8fc8.webp\";","import React, { useState } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport carouselImage1 from '../images/carousel-image-1.webp';\r\nimport carouselImage2 from '../images/carousel-image-2.webp';\r\nimport Modal from '../components/ModalDialog';\r\nimport '../styles/PublicHomePage.css';\r\n\r\n\r\nconst PublicHomePage = () => {\r\n  const [ openModal, setOpenModal ] = useState(true);\r\n  return (\r\n    <div>\r\n      <Carousel animation='false'>\r\n        <Carousel.Item>\r\n          <img src={carouselImage1} alt='Slide 1' className='homepage-img' />\r\n          <Carousel.Caption className='caption'>\r\n            <h3>Manage your clients</h3>\r\n            <p>Change their subscription time, manage all the data from one place.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img src={carouselImage2} alt='Slide 2' className='homepage-img' />\r\n          <Carousel.Caption className='caption'>\r\n            <h3>Easy and flexible access to information</h3>\r\n            <p>Friendly user interface to access easily to data.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <Modal\r\n        open={openModal}\r\n        handleOpen={setOpenModal}\r\n        title='Welcome!'\r\n        message='For testing purposes you can use the followings credentials: '\r\n      >\r\n        <p>Username: <strong>demo</strong></p>\r\n        <p>Password: <strong>demo123</strong></p>\r\n        <p>Thank you.</p>\r\n      </ Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicHomePage;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className='text-center'>\r\n      <h4>\r\n        Loading...\r\n      </h4>\r\n      <Spinner className='m-3' animation=\"border\" role=\"status\" />\r\n    </div>\r\n  ) \r\n};\r\n\r\nexport default Loading;\r\n","import * as yup from 'yup';\r\n\r\nconst businessSchema = yup.object().shape({\r\n  name: yup.string().required('Is required'),\r\n  password: yup.string().required('Is required').min(6, 'Must have at least 6 characters long'),\r\n  username: yup.string().required('Is required'),\r\n  passwordConfirm: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match').required('You need to confirm your password')\r\n});\r\n\r\nexport default businessSchema;","import axios from 'axios';\r\nconst baseUrl = '/api/business'\r\n\r\nconst create = async newUser => {\r\n  try {\r\n    const response = await axios.post(baseUrl, newUser);\r\n    return response;\r\n  }\r\n  catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nconst businessService = { create }\r\n\r\nexport default businessService;","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport businessSchema from '../validations/BusinessValidation';\r\nimport businessService from '../services/business';\r\nimport { Form, Col, Row, Button } from 'react-bootstrap';\r\nimport TextField from '../components/FormTextField';\r\n\r\n \r\n\r\nconst initialValues = {\r\n  name: '',\r\n  username: '',\r\n  password: '',\r\n  passwordConfirm: ''\r\n};\r\n\r\nconst SignUpForm = ({redirectHandler}) => (\r\n  <Formik\r\n    initialValues={initialValues}\r\n    onSubmit={ async (values, actions ) => {\r\n      try {\r\n        const newBusiness = {\r\n          ...values\r\n        }\r\n        const response = await businessService.create(newBusiness);\r\n        console.log(response);\r\n        actions.resetForm();\r\n        actions.setSubmitting(false);\r\n        redirectHandler(true);\r\n      }\r\n      catch (error) {\r\n        console.log(error);\r\n        actions.setSubmitting(false);\r\n      }\r\n    }}\r\n    validationSchema={businessSchema}\r\n  >\r\n    {({ handleChange, handleSubmit, isSubmitting, isValid, values, errors }) => (\r\n      <Form className='text-center' onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col>\r\n            <TextField \r\n              label='Name'\r\n              name='name'\r\n              onChange={handleChange}\r\n              value={values.name}\r\n              error={errors.name}\r\n            />\r\n            <TextField \r\n              label='Username'\r\n              name='username'\r\n              onChange={handleChange}\r\n              value={values.username}\r\n              error={errors.username}\r\n            />\r\n            <TextField \r\n              label='Password'\r\n              name='password'\r\n              type='password'\r\n              onChange={handleChange}\r\n              value={values.password}\r\n              error={errors.password}\r\n            />\r\n            <TextField \r\n              label='Confirm password'\r\n              name='passwordConfirm'\r\n              type='password'\r\n              onChange={handleChange}\r\n              value={values.passwordConfirm}\r\n              error={errors.passwordConfirm}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n           <Button\r\n            variant='success'\r\n            type='submit'\r\n            disabled={ !isValid || isSubmitting}\r\n            >\r\n              Register\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n);\r\n\r\n\r\n\r\nexport default SignUpForm;\r\n","import React, { useState } from 'react';\r\nimport { Container, Card, Col, Row } from 'react-bootstrap';\r\nimport SignUpForm from '../components/SignUpForm';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SignUp = () => {\r\n  const [ redirect, setRedirect ] = useState(false);\r\n  if (redirect) {\r\n    return <Redirect to='/home' />\r\n  }\r\n  return (\r\n    <Container fluid className='mt-4'>\r\n      <Row className='align-items-center'>\r\n        <Col xs={10} sm={6} md ={5} lg={4} className='mx-auto'>\r\n          <Card border='dark' bg='dark' text='light'>\r\n            <Card.Body>\r\n              <Card.Title className='text-center'>Sign Up</Card.Title>\r\n              <SignUpForm redirectHandler={setRedirect} />\r\n            </Card.Body>\r\n          </Card>       \r\n        </Col>\r\n      </Row>    \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport clientService from './services/client';\r\nimport Navigation from './components/Navigation';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Clients from './pages/Clients';\r\nimport Login from './pages/Login';\r\nimport Account from './pages/Account';\r\nimport AddClient from './pages/AddClient';\r\nimport Footer from './components/Footer';\r\nimport PublicHomePage from './pages/PublicHomePage';\r\nimport Loading from './components/Loading';\r\nimport SignUp from './pages/SignUp';\r\n\r\nconst App = () => {\r\n  const [ user, setUser ] = useState(null);\r\n  const [ clientList, setClientList ] = useState([]);\r\n  const [ isLoading, setIsLoading ] = useState(false);\r\n\r\n  // GET USER FROM LOCAL STORAGE\r\n  useEffect( () => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedGymAppUser');\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n    };\r\n  }, [] );\r\n  // GET CLIENTS FROM DB\r\n  useEffect(()=> {\r\n    const getClients = async () => {\r\n      try{\r\n        setIsLoading(true);\r\n        const response = await clientService.get(user.token);\r\n        if (response.status === 200) {\r\n          setIsLoading(false);\r\n          setClientList(response.data);\r\n        } \r\n      }\r\n      catch (error) {\r\n        setIsLoading(false);\r\n        window.localStorage.removeItem('loggedGymAppUser');\r\n        setUser(null);\r\n      };\r\n    };\r\n    getClients();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return(\r\n    <Router>\r\n      <div>\r\n        <Navigation user={user} />\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <Login loginHandler={setUser} />\r\n          </Route>\r\n          <Route path=\"/clients\">\r\n            <Clients\r\n              user={user}\r\n              userHandler={setUser}\r\n              clientList={clientList}\r\n              setClientList={setClientList}\r\n            />\r\n          </Route>\r\n          <Route path=\"/account\">\r\n            <Account loginHandler={setUser} />\r\n          </Route>\r\n          <Route path=\"/addclient\">\r\n            <AddClient\r\n              user={user}\r\n              clientList={clientList}\r\n              clientListHandler={setClientList}\r\n            />\r\n          </Route>\r\n          <Route path='/signup'>\r\n            <SignUp />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            { user\r\n              ? (isLoading\r\n                ? <Loading /> \r\n                : <Dashboard\r\n                    clientList={clientList}\r\n                    setClientList={setClientList}\r\n                    user={user}\r\n                  />) \r\n              : <PublicHomePage /> \r\n            }\r\n          </Route>\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}